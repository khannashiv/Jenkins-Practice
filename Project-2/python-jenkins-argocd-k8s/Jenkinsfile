pipeline {
    
    agent any 

    options {
        buildDiscarder(logRotator(numToKeepStr: '4'))
        }
    
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        
        stage('Checkout'){
           steps {
                git credentialsId: 'Git-auth-token', 
                url: 'https://github.com/khannashiv/Jenkins-Practice',
                branch: 'main'
           }
        }

        stage('Build Docker'){
            steps{
                script{
                    sh '''
                    echo 'Buid Docker Image'
                    ls -al /var/lib/jenkins/workspace/python-todo-app/
                    pwd
                    docker build -t khannashiv/cicd-e2e:${BUILD_NUMBER} -f Project-2/python-jenkins-argocd-k8s/Dockerfile .
                    '''
                }
            }
        }

        stage('Push the artifacts'){
           steps{
                withCredentials([usernamePassword(credentialsId: 'Docker-hub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                script{
                    sh '''
                    echo 'Login to Docker Hub'
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

                    echo 'Push to Repo'
                    docker push khannashiv/todoapp:${BUILD_NUMBER}
                    '''
                    }
                }
            }
        }
        
        stage('Checkout K8S manifest SCM'){
            steps {
                git credentialsId: 'Git-auth-token', 
                url: 'https://github.com/khannashiv/CICD-manifests',
                branch: 'main'
            }
        }
        
        stage('Update K8S manifest & push to Repo'){
        environment {
                GIT_REPO_NAME = "CICD-manifests"
                GIT_USER_NAME = "khannashiv"
            }
            steps {
                script{
                    withCredentials([string(credentialsId: 'Git-auth-token', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            echo "Cloning target repo..."
                            rm -rf target-repo
                            git clone https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git target-repo

                            echo "Cloning source repo (Jenkins-Practice)..."
                            git clone https://github.com/khannashiv/Jenkins-Practice.git src-repo

                            echo "Modifying deploy.yaml in source repo"
                            POD_YAML_PATH="src-repo/Project-2/python-jenkins-argocd-k8s/deploy/pod.yaml"
                            SERVICE_YAML_PATH="src-repo/Project-2/python-jenkins-argocd-k8s/deploy/service.yaml"
                            DEPLOY_YAML_PATH="src-repo/Project-2/python-jenkins-argocd-k8s/deploy/deploy.yaml"

                            sed -i "s/ReplaceImageTag/${BUILD_NUMBER}/g" "$DEPLOY_YAML_PATH"
                            sed -i "s/ReplaceImageTag/${BUILD_NUMBER}/g" "$POD_YAML_PATH"
        

                            echo "Printing the udpated build number for manifest files."
                            cat "$DEPLOY_YAML_PATH"
                            cat "$POD_YAML_PATH"
        

                            echo "Copying updated deploy.yaml to target repo"
                            mkdir -p target-repo/Project-2/python-jenkins-argocd-k8s/deploy
                            cp "$DEPLOY_YAML_PATH" target-repo/Project-2/python-jenkins-argocd-k8s/deploy/
                            cp "$SERVICE_YAML_PATH" target-repo/Project-2/python-jenkins-argocd-k8s/deploy/
                            cp "$POD_YAML_PATH" target-repo/Project-2/python-jenkins-argocd-k8s/deploy/

                            cd target-repo
                            git config user.email "khannashiv94@gmail.com"
                            git config user.name "Shiv"

                            git add Project-2/python-jenkins-argocd-k8s/deploy/*
                            git commit -m "Updated the deploy.yaml along with this copying pod.yaml as well as service.yaml | Jenkins Pipeline" || echo "Nothing to commit"
                            git push origin main || echo "Nothing to push"
                        '''                        
                    }
                }
            }
        }
    }
}
